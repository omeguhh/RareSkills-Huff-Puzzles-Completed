
/** 
 *  FOO_BAR HUFF EXERCISE
 *
 *  Majority of ethereum contracts hold logic divide this logic into functions which users can specify and call to execute a particular logic without clashing into the other
 *  
 *  The task is to write within the `MAIN` macro below, huff code that mimics 2 solidity functions. 
 *      - One named `foo()` that simply returns 2,
 *      - the second named `bar()` that simply returns 3.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function foo() payable returns(uint256)
 #define function bar() payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
//get fn selector and return uint256 based on above specs
push0 calldataload 0xe0 shr                  //[fn_selector]

dup1 __FUNC_SIG(foo) eq foo jumpi
dup1 __FUNC_SIG(bar) eq bar jumpi

    push0 push0 revert

foo:
//per specs return 2
    0x02 push0 mstore           //[]
    0x20 push0 return           //[]

bar:
    //per specs return 3
    0x03 push0 mstore           //[]
    0x20 push0 return           //[]
}